package com.alemar;
/**
 *
 * @author marti
 */
public class Interfaz extends javax.swing.JFrame {

    /**
     * Creates new form Interfaz
     */
    public Interfaz() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        Slot1_BTN = new javax.swing.JButton();
        Slot2_BTN = new javax.swing.JButton();
        Slot3_BTN = new javax.swing.JButton();
        Slot4_BTN = new javax.swing.JButton();
        Slot5_BTN = new javax.swing.JButton();
        Slot6_BTN = new javax.swing.JButton();
        Slot7_BTN = new javax.swing.JButton();
        Slot8_BTN = new javax.swing.JButton();
        Slot9_BTN = new javax.swing.JButton();
        Slot10_BTN = new javax.swing.JButton();
        Slot11_BTN = new javax.swing.JButton();
        Slot12_BTN = new javax.swing.JButton();
        jButton30 = new javax.swing.JButton();
        Radio_State_Display = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();
        Freq_Type_Display = new javax.swing.JLabel();
        Siguiente_Freq_Button = new javax.swing.JButton();
        Frequency_Display = new javax.swing.JLabel();
        Guardar_Popup = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Encender");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        Slot1_BTN.setText("Slot 1");
        Slot1_BTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Slot1_BTNActionPerformed(evt);
            }
        });

        Slot2_BTN.setText("Slot 2");
        Slot2_BTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Slot2_BTNActionPerformed(evt);
            }
        });

        Slot3_BTN.setText("Slot 3");
        Slot3_BTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Slot3_BTNActionPerformed(evt);
            }
        });

        Slot4_BTN.setText("Slot 4");
        Slot4_BTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Slot4_BTNActionPerformed(evt);
            }
        });

        Slot5_BTN.setText("Slot 5");
        Slot5_BTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Slot5_BTNActionPerformed(evt);
            }
        });

        Slot6_BTN.setText("Slot 6");
        Slot6_BTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Slot6_BTNActionPerformed(evt);
            }
        });

        Slot7_BTN.setText("Slot 7");
        Slot7_BTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Slot7_BTNActionPerformed(evt);
            }
        });

        Slot8_BTN.setText("Slot 8");
        Slot8_BTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Slot8_BTNActionPerformed(evt);
            }
        });

        Slot9_BTN.setText("Slot 9");
        Slot9_BTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Slot9_BTNActionPerformed(evt);
            }
        });

        Slot10_BTN.setText("Slot 10");
        Slot10_BTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Slot10_BTNActionPerformed(evt);
            }
        });

        Slot11_BTN.setText("Slot 11");
        Slot11_BTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Slot11_BTNActionPerformed(evt);
            }
        });

        Slot12_BTN.setText("Slot 12");
        Slot12_BTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Slot12_BTNActionPerformed(evt);
            }
        });

        jButton30.setText("Guardar");
        jButton30.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton30ActionPerformed(evt);
            }
        });

        Radio_State_Display.setText("Apagado");
        Radio_State_Display.setToolTipText("");

        jButton8.setText("Cambiar Estaci√≥n");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        Siguiente_Freq_Button.setText("Siguiente Frecuencia");
        Siguiente_Freq_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Siguiente_Freq_ButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(Slot7_BTN)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(Slot8_BTN)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(Slot9_BTN)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(Slot10_BTN)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(Slot11_BTN)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(Slot12_BTN))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(Siguiente_Freq_Button)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(Frequency_Display)
                            .addGap(65, 65, 65)
                            .addComponent(Guardar_Popup))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(Slot1_BTN)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(Slot2_BTN)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(Slot3_BTN)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(Slot4_BTN)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(Slot5_BTN))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jButton1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(Radio_State_Display)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jButton30)
                                .addComponent(Slot6_BTN))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jButton8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Freq_Type_Display)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton1)
                        .addComponent(Radio_State_Display))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton30)))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton8)
                    .addComponent(Freq_Type_Display))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Siguiente_Freq_Button)
                    .addComponent(Frequency_Display)
                    .addComponent(Guardar_Popup))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Slot1_BTN)
                    .addComponent(Slot2_BTN)
                    .addComponent(Slot3_BTN)
                    .addComponent(Slot4_BTN)
                    .addComponent(Slot5_BTN)
                    .addComponent(Slot6_BTN))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Slot7_BTN)
                    .addComponent(Slot8_BTN)
                    .addComponent(Slot9_BTN)
                    .addComponent(Slot10_BTN)
                    .addComponent(Slot11_BTN)
                    .addComponent(Slot12_BTN))
                .addGap(0, 97, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    //CODIGO PROPIO
    boolean State = false;
    boolean AM = true;
    int AM_Channel = 530;
    float FM_Channel =  87.9f;
    boolean Guardar = false;
    
    Estados Slot1 = new Estados();
    Estados Slot2 = new Estados();
    Estados Slot3 = new Estados();
    Estados Slot4 = new Estados();
    Estados Slot5 = new Estados();
    Estados Slot6 = new Estados();
    Estados Slot7 = new Estados();
    Estados Slot8 = new Estados();
    Estados Slot9 = new Estados();
    Estados Slot10 = new Estados();
    Estados Slot11 = new Estados();
    Estados Slot12 = new Estados();

    public void setAM(boolean aM) {
            AM = aM;
    }
    public void setState(boolean state) {
            State = state;
    }
    public boolean getAM(){
            return AM;
    }
    public boolean getFreqState(){
            return State;
    }

    public void increase_AM(){
            if (AM_Channel == 1610){
                    AM_Channel = 530;
            }else{
                    AM_Channel += 10;
            }
            Frequency_Display.setText(String.valueOf(AM_Channel));
    }
    public void increase_FM(){
            if (FM_Channel-107.9f > 0.01f){
                    FM_Channel = 87.9f;
            }else{
                    FM_Channel += 0.2f;
            }
            Frequency_Display.setText(String.format("%.1f", FM_Channel));
    }
    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        if (State == true){
            if (AM == true){
                AM = false;
                Freq_Type_Display.setText("FM");
                Frequency_Display.setText(String.format("%.1f", FM_Channel));
            }else{
                AM = true;
                Freq_Type_Display.setText("AM");
                Frequency_Display.setText(String.valueOf(AM_Channel));
            }
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void Siguiente_Freq_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Siguiente_Freq_ButtonActionPerformed
        if (State == true){
            if (AM == true){
                increase_AM();
            }else{
                increase_FM();
            }
        }
    }//GEN-LAST:event_Siguiente_Freq_ButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (State == true){
            State = false;
            Radio_State_Display.setText("Apagado");
            Freq_Type_Display.setText("");
            Frequency_Display.setText("");
        }else{
            State = true;
            Radio_State_Display.setText("Encendido");
            Freq_Type_Display.setText("AM");
            Frequency_Display.setText(String.valueOf(AM_Channel));
            AM = true;
            
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton30ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton30ActionPerformed
        if (State == true){
            if (Guardar == true){
                Guardar = false;
                Guardar_Popup.setText("");
            }else{
                Guardar = true;
                Guardar_Popup.setText("Seleccione en que slot desea guardar la frequencia");
            }
        }
    }//GEN-LAST:event_jButton30ActionPerformed

    private void Slot1_BTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Slot1_BTNActionPerformed
        if (State == true){
            if (Guardar == true){
                if (AM == true){
                    Slot1.setAM(true);
                    Slot1.setFrequency_AM(AM_Channel);
                    Slot1_BTN.setText("AM " + String.valueOf(AM_Channel));
                }else{
                    Slot1.setAM(false);
                    Slot1.setFrequency_FM(FM_Channel);
                    Slot1_BTN.setText("FM " + String.format("%.1f", FM_Channel));
                }
                Guardar = false;
                Guardar_Popup.setText("");
            }else{
                if (Slot1.getAM() == true){
                    Freq_Type_Display.setText("AM");
                }else{
                    Freq_Type_Display.setText("FM");
                }
                AM = Slot1.getAM();
                if (AM == true){
                    AM_Channel = Slot1.getAM_Frequency();
                    Frequency_Display.setText(String.valueOf(Slot1.getAM_Frequency()));
                }else{
                    FM_Channel = Slot1.getFM_Frequency();
                    Frequency_Display.setText(String.format("%.1f", Slot1.getFM_Frequency()));
                }
            }
        }
    }//GEN-LAST:event_Slot1_BTNActionPerformed

    private void Slot2_BTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Slot2_BTNActionPerformed
        if (State == true){
            if (Guardar == true){
                if (AM == true){
                    Slot2.setAM(true);
                    Slot2.setFrequency_AM(AM_Channel);
                    Slot2_BTN.setText("AM " + String.valueOf(AM_Channel));
                }else{
                    Slot2.setAM(false);
                    Slot2.setFrequency_FM(FM_Channel);
                    Slot2_BTN.setText("FM " + String.format("%.1f", FM_Channel));
                }
                Guardar = false;
                Guardar_Popup.setText("");
            }else{
                if (Slot2.getAM() == true){
                    Freq_Type_Display.setText("AM");
                }else{
                    Freq_Type_Display.setText("FM");
                }
                AM = Slot2.getAM();
                if (AM == true){
                    AM_Channel = Slot2.getAM_Frequency();
                    Frequency_Display.setText(String.valueOf(Slot2.getAM_Frequency()));
                }else{
                    FM_Channel = Slot2.getFM_Frequency();
                    Frequency_Display.setText(String.format("%.1f", Slot2.getFM_Frequency()));
                }
            }
        }
    }//GEN-LAST:event_Slot2_BTNActionPerformed

    private void Slot3_BTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Slot3_BTNActionPerformed
        if (State == true){
            if (Guardar == true){
                if (AM == true){
                    Slot3.setAM(true);
                    Slot3.setFrequency_AM(AM_Channel);
                    Slot3_BTN.setText("AM " + String.valueOf(AM_Channel));
                }else{
                    Slot3.setAM(false);
                    Slot3.setFrequency_FM(FM_Channel);
                    Slot3_BTN.setText("FM " + String.format("%.1f", FM_Channel));
                }
                Guardar = false;
                Guardar_Popup.setText("");
            }else{
                if (Slot3.getAM() == true){
                    Freq_Type_Display.setText("AM");
                }else{
                    Freq_Type_Display.setText("FM");
                }
                AM = Slot3.getAM();
                if (AM == true){
                    AM_Channel = Slot3.getAM_Frequency();
                    Frequency_Display.setText(String.valueOf(Slot3.getAM_Frequency()));
                }else{
                    FM_Channel = Slot3.getFM_Frequency();
                    Frequency_Display.setText(String.format("%.1f", Slot3.getFM_Frequency()));
                }
            }
        }
    }//GEN-LAST:event_Slot3_BTNActionPerformed

    private void Slot4_BTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Slot4_BTNActionPerformed
        if (State == true){
            if (Guardar == true){
                if (AM == true){
                    Slot4.setAM(true);
                    Slot4.setFrequency_AM(AM_Channel);
                    Slot4_BTN.setText("AM " + String.valueOf(AM_Channel));
                }else{
                    Slot4.setAM(false);
                    Slot4.setFrequency_FM(FM_Channel);
                    Slot4_BTN.setText("FM " + String.format("%.1f", FM_Channel));
                }
                Guardar = false;
                Guardar_Popup.setText("");
            }else{
                if (Slot4.getAM() == true){
                    Freq_Type_Display.setText("AM");
                }else{
                    Freq_Type_Display.setText("FM");
                }
                AM = Slot4.getAM();
                if (AM == true){
                    AM_Channel = Slot4.getAM_Frequency();
                    Frequency_Display.setText(String.valueOf(Slot4.getAM_Frequency()));
                }else{
                    FM_Channel = Slot4.getFM_Frequency();
                    Frequency_Display.setText(String.format("%.1f", Slot4.getFM_Frequency()));
                }
            }
        }
    }//GEN-LAST:event_Slot4_BTNActionPerformed

    private void Slot5_BTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Slot5_BTNActionPerformed
        if (State == true){
            if (Guardar == true){
                if (AM == true){
                    Slot5.setAM(true);
                    Slot5.setFrequency_AM(AM_Channel);
                    Slot5_BTN.setText("AM " + String.valueOf(AM_Channel));
                }else{
                    Slot5.setAM(false);
                    Slot5.setFrequency_FM(FM_Channel);
                    Slot5_BTN.setText("FM " + String.format("%.1f", FM_Channel));
                }
                Guardar = false;
                Guardar_Popup.setText("");
            }else{
                if (Slot5.getAM() == true){
                    Freq_Type_Display.setText("AM");
                }else{
                    Freq_Type_Display.setText("FM");
                }
                AM = Slot5.getAM();
                if (AM == true){
                    AM_Channel = Slot5.getAM_Frequency();
                    Frequency_Display.setText(String.valueOf(Slot5.getAM_Frequency()));
                }else{
                    FM_Channel = Slot5.getFM_Frequency();
                    Frequency_Display.setText(String.format("%.1f", Slot5.getFM_Frequency()));
                }
            }
        }
    }//GEN-LAST:event_Slot5_BTNActionPerformed

    private void Slot6_BTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Slot6_BTNActionPerformed
        if (State == true){
            if (Guardar == true){
                if (AM == true){
                    Slot6.setAM(true);
                    Slot6.setFrequency_AM(AM_Channel);
                    Slot6_BTN.setText("AM " + String.valueOf(AM_Channel));
                }else{
                    Slot6.setAM(false);
                    Slot6.setFrequency_FM(FM_Channel);
                    Slot6_BTN.setText("FM " + String.format("%.1f", FM_Channel));
                }
                Guardar = false;
                Guardar_Popup.setText("");
            }else{
                if (Slot6.getAM() == true){
                    Freq_Type_Display.setText("AM");
                }else{
                    Freq_Type_Display.setText("FM");
                }
                AM = Slot6.getAM();
                if (AM == true){
                    AM_Channel = Slot6.getAM_Frequency();
                    Frequency_Display.setText(String.valueOf(Slot6.getAM_Frequency()));
                }else{
                    FM_Channel = Slot6.getFM_Frequency();
                    Frequency_Display.setText(String.format("%.1f", Slot6.getFM_Frequency()));
                }
            }
        }
    }//GEN-LAST:event_Slot6_BTNActionPerformed

    private void Slot7_BTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Slot7_BTNActionPerformed
        if (State == true){
            if (Guardar == true){
                if (AM == true){
                    Slot7.setAM(true);
                    Slot7.setFrequency_AM(AM_Channel);
                    Slot7_BTN.setText("AM " + String.valueOf(AM_Channel));
                }else{
                    Slot7.setAM(false);
                    Slot7.setFrequency_FM(FM_Channel);
                    Slot7_BTN.setText("FM " + String.format("%.1f", FM_Channel));
                }
                Guardar = false;
                Guardar_Popup.setText("");
            }else{
                if (Slot7.getAM() == true){
                    Freq_Type_Display.setText("AM");
                }else{
                    Freq_Type_Display.setText("FM");
                }
                AM = Slot7.getAM();
                if (AM == true){
                    AM_Channel = Slot7.getAM_Frequency();
                    Frequency_Display.setText(String.valueOf(Slot7.getAM_Frequency()));
                }else{
                    FM_Channel = Slot7.getFM_Frequency();
                    Frequency_Display.setText(String.format("%.1f", Slot7.getFM_Frequency()));
                }
            }
        }
    }//GEN-LAST:event_Slot7_BTNActionPerformed

    private void Slot8_BTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Slot8_BTNActionPerformed
        if (State == true){
            if (Guardar == true){
                if (AM == true){
                    Slot8.setAM(true);
                    Slot8.setFrequency_AM(AM_Channel);
                    Slot8_BTN.setText("AM " + String.valueOf(AM_Channel));
                }else{
                    Slot8.setAM(false);
                    Slot8.setFrequency_FM(FM_Channel);
                    Slot8_BTN.setText("FM " + String.format("%.1f", FM_Channel));
                }
                Guardar = false;
                Guardar_Popup.setText("");
            }else{
                if (Slot8.getAM() == true){
                    Freq_Type_Display.setText("AM");
                }else{
                    Freq_Type_Display.setText("FM");
                }
                AM = Slot8.getAM();
                if (AM == true){
                    AM_Channel = Slot8.getAM_Frequency();
                    Frequency_Display.setText(String.valueOf(Slot8.getAM_Frequency()));
                }else{
                    FM_Channel = Slot8.getFM_Frequency();
                    Frequency_Display.setText(String.format("%.1f", Slot8.getFM_Frequency()));
                }
            }
        }
    }//GEN-LAST:event_Slot8_BTNActionPerformed

    private void Slot9_BTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Slot9_BTNActionPerformed
        if (State == true){
            if (Guardar == true){
                if (AM == true){
                    Slot9.setAM(true);
                    Slot9.setFrequency_AM(AM_Channel);
                    Slot9_BTN.setText("AM " + String.valueOf(AM_Channel));
                }else{
                    Slot9.setAM(false);
                    Slot9.setFrequency_FM(FM_Channel);
                    Slot9_BTN.setText("FM " + String.format("%.1f", FM_Channel));
                }
                Guardar = false;
                Guardar_Popup.setText("");
            }else{
                if (Slot9.getAM() == true){
                    Freq_Type_Display.setText("AM");
                }else{
                    Freq_Type_Display.setText("FM");
                }
                AM = Slot9.getAM();
                if (AM == true){
                    AM_Channel = Slot9.getAM_Frequency();
                    Frequency_Display.setText(String.valueOf(Slot9.getAM_Frequency()));
                }else{
                    FM_Channel = Slot9.getFM_Frequency();
                    Frequency_Display.setText(String.format("%.1f", Slot9.getFM_Frequency()));
                }
            }
        }
    }//GEN-LAST:event_Slot9_BTNActionPerformed

    private void Slot10_BTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Slot10_BTNActionPerformed
        if (State == true){
            if (Guardar == true){
                if (AM == true){
                    Slot10.setAM(true);
                    Slot10.setFrequency_AM(AM_Channel);
                    Slot10_BTN.setText("AM " + String.valueOf(AM_Channel));
                }else{
                    Slot10.setAM(false);
                    Slot10.setFrequency_FM(FM_Channel);
                    Slot10_BTN.setText("FM " + String.format("%.1f", FM_Channel));
                }
                Guardar = false;
                Guardar_Popup.setText("");
            }else{
                if (Slot10.getAM() == true){
                    Freq_Type_Display.setText("AM");
                }else{
                    Freq_Type_Display.setText("FM");
                }
                AM = Slot10.getAM();
                if (AM == true){
                    AM_Channel = Slot10.getAM_Frequency();
                    Frequency_Display.setText(String.valueOf(Slot10.getAM_Frequency()));
                }else{
                    FM_Channel = Slot10.getFM_Frequency();
                    Frequency_Display.setText(String.format("%.1f", Slot10.getFM_Frequency()));
                }
            }
        }
    }//GEN-LAST:event_Slot10_BTNActionPerformed

    private void Slot11_BTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Slot11_BTNActionPerformed
        if (State == true){
            if (Guardar == true){
                if (AM == true){
                    Slot11.setAM(true);
                    Slot11.setFrequency_AM(AM_Channel);
                    Slot11_BTN.setText("AM " + String.valueOf(AM_Channel));
                }else{
                    Slot11.setAM(false);
                    Slot11.setFrequency_FM(FM_Channel);
                    Slot11_BTN.setText("FM " + String.format("%.1f", FM_Channel));
                }
                Guardar = false;
                Guardar_Popup.setText("");
            }else{
                if (Slot11.getAM() == true){
                    Freq_Type_Display.setText("AM");
                }else{
                    Freq_Type_Display.setText("FM");
                }
                AM = Slot11.getAM();
                if (AM == true){
                    AM_Channel = Slot11.getAM_Frequency();
                    Frequency_Display.setText(String.valueOf(Slot11.getAM_Frequency()));
                }else{
                    FM_Channel = Slot11.getFM_Frequency();
                    Frequency_Display.setText(String.format("%.1f", Slot11.getFM_Frequency()));
                }
            }
        }
    }//GEN-LAST:event_Slot11_BTNActionPerformed

    private void Slot12_BTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Slot12_BTNActionPerformed
        if (State == true){
            if (Guardar == true){
                if (AM == true){
                    Slot12.setAM(true);
                    Slot12.setFrequency_AM(AM_Channel);
                    Slot12_BTN.setText("AM " + String.valueOf(AM_Channel));
                }else{
                    Slot12.setAM(false);
                    Slot12.setFrequency_FM(FM_Channel);
                    Slot12_BTN.setText("FM " + String.format("%.1f", FM_Channel));
                }
                Guardar = false;
                Guardar_Popup.setText("");
            }else{
                if (Slot12.getAM() == true){
                    Freq_Type_Display.setText("AM");
                }else{
                    Freq_Type_Display.setText("FM");
                }
                AM = Slot12.getAM();
                if (AM == true){
                    AM_Channel = Slot12.getAM_Frequency();
                    Frequency_Display.setText(String.valueOf(Slot12.getAM_Frequency()));
                }else{
                    FM_Channel = Slot12.getFM_Frequency();
                    Frequency_Display.setText(String.format("%.1f", Slot12.getFM_Frequency()));
                }
            }
        }
    }//GEN-LAST:event_Slot12_BTNActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interfaz().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Freq_Type_Display;
    private javax.swing.JLabel Frequency_Display;
    private javax.swing.JLabel Guardar_Popup;
    private javax.swing.JLabel Radio_State_Display;
    private javax.swing.JButton Siguiente_Freq_Button;
    private javax.swing.JButton Slot10_BTN;
    private javax.swing.JButton Slot11_BTN;
    private javax.swing.JButton Slot12_BTN;
    private javax.swing.JButton Slot1_BTN;
    private javax.swing.JButton Slot2_BTN;
    private javax.swing.JButton Slot3_BTN;
    private javax.swing.JButton Slot4_BTN;
    private javax.swing.JButton Slot5_BTN;
    private javax.swing.JButton Slot6_BTN;
    private javax.swing.JButton Slot7_BTN;
    private javax.swing.JButton Slot8_BTN;
    private javax.swing.JButton Slot9_BTN;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton30;
    private javax.swing.JButton jButton8;
    // End of variables declaration//GEN-END:variables
}
